<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>ccri-fhirgatewayhttps</artifactId>
	<packaging>war</packaging>

	<name>ccri-fhirgatewayhttps</name>

 
	<repositories>
		<repository>
			<id>oss-snapshots</id>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</repository>
	</repositories>

    <parent>
        <groupId>uk.nhs.careconnect.ri</groupId>
        <artifactId>ccri</artifactId>
        <version>3.3.7-SNAPSHOT</version>
    </parent>

	<properties>


		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<ebay_cors_filter_version>1.0.1</ebay_cors_filter_version>

        <jetty_version>9.4.5.v20170502</jetty_version>
        <hibernate_version>5.2.11.Final</hibernate_version>
        <hibernate_validator_version>5.4.1.Final</hibernate_validator_version>

        <maven_assembly_plugin_version>2.5.3</maven_assembly_plugin_version>
        <maven_license_plugin_version>1.8</maven_license_plugin_version>
        <maven_source_plugin_version>2.4</maven_source_plugin_version>
        <phloc_schematron_version>2.7.1</phloc_schematron_version>
        <phloc_commons_version>4.4.6</phloc_commons_version>

        <xmlunit_version>1.6</xmlunit_version>


	</properties>
	<dependencies>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
			<version>${camel-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring</artifactId>
			<version>${camel-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring-javaconfig</artifactId>
			<version>${camel-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-http4</artifactId>
			<version>${camel-version}</version>
		</dependency>
		<!--
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-hl7</artifactId>
			<version>2.18.3</version>
		</dependency>
-->

		<dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit-version}</version>
			<scope>test</scope>
        </dependency>

		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>${cucumber-version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${cucumber-version}</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-server</artifactId>
			<version>${hapi-fhir-version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-jdk14</artifactId>
				</exclusion>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-codec</groupId>
                    <artifactId>commons-codec</artifactId>
                </exclusion>
            </exclusions>
		</dependency>



		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-jpaserver-base</artifactId>
			<version>${hapi-fhir-version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>commons-codec</artifactId>
                    <groupId>commons-codec</groupId>
                </exclusion>
            </exclusions>
        </dependency>



		<!-- Flyway for database migrations. This is used by hspc for openid

-->


		<!-- Needed for JEE/Servlet support -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>

		<!-- If you are using HAPI narrative generation, you will need to include Thymeleaf as well. Otherwise the following can be omitted.	-->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>${thymeleaf-version}</version>
			<scope>test</scope>
			<exclusions>
			<exclusion>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
			</exclusion>
			</exclusions>
		</dependency>
		<dependency>
				<groupId>org.thymeleaf</groupId>
				<artifactId>thymeleaf-spring4</artifactId>
				<version>${thymeleaf-version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Used for CORS support -->
		<dependency>
			<groupId>org.ebaysf.web</groupId>
			<artifactId>cors-filter</artifactId>
			<version>${ebay_cors_filter_version}</version>
			<exclusions>
				<exclusion>
					<artifactId>servlet-api</artifactId>
					<groupId>javax.servlet</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Spring Web is used to deploy the server to a web container. -->

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring_version}</version>
        </dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>${slf4j}</version>
		</dependency>

		<!-- Spring OAuth2 Dependencies -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-jwt</artifactId>
			<version>${spring_security_version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.8.10</version>
		</dependency>

		<!-- You may not need this if you are deploying to an application server which provides database connection pools itself. -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>2.1.1</version>
		</dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.10</version>
        </dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.6</version>
		</dependency>


        <!-- The following dependencies are only needed for automated unit tests, you do not neccesarily need them to run the example. -->

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring_version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlets</artifactId>
            <scope>test</scope>
            <version>${jetty_version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <scope>test</scope>
            <version>${jetty_version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty.websocket</groupId>
            <artifactId>websocket-api</artifactId>
            <scope>test</scope>
            <version>${jetty_version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty.websocket</groupId>
            <artifactId>websocket-client</artifactId>
            <scope>test</scope>
            <version>${jetty_version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty.websocket</groupId>
            <artifactId>websocket-server</artifactId>
            <scope>test</scope>
            <version>${jetty_version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <scope>test</scope>
            <version>${jetty_version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-util</artifactId>
            <scope>test</scope>
            <version>${jetty_version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <scope>test</scope>
            <version>${jetty_version}</version>
        </dependency>
        <dependency>
            <groupId>com.phloc</groupId>
            <artifactId>phloc-schematron</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>Saxon-HE</artifactId>
                    <groupId>net.sf.saxon</groupId>
                </exclusion>
            </exclusions>
            <version>${phloc_schematron_version}</version>
        </dependency>

		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-testpage-overlay</artifactId>
			<version>${hapi-fhir-version}</version>
			<type>war</type>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-testpage-overlay</artifactId>
			<version>${hapi-fhir-version}</version>
			<classifier>classes</classifier>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>uk.nhs.careconnect.ri</groupId>
			<artifactId>ccri-fhirserver-common</artifactId>
			<version>${care-connect-version}</version>
		</dependency>

		<dependency>
			<groupId>uk.nhs.careconnect.ri</groupId>
			<artifactId>ccri-fhirgateway-common</artifactId>
			<version>${care-connect-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-jwt</artifactId>
			<version>1.0.8.RELEASE</version>
		</dependency>


	</dependencies>

	<build>

		<!-- Tells Maven to name the generated WAR file as hapi-fhir-jpaserver-example.war -->
		<finalName>careconnect-gateway-secure</finalName>

		<!-- The following is not required for the application to build, but allows you to test it by issuing "mvn jetty:run" from the command line. -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<configuration>
						<webApp>
							<contextPath>/careconnect-ri</contextPath>
							<allowDuplicateFragmentNames>true</allowDuplicateFragmentNames>
						</webApp>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>

		<plugins>


			<!-- Tell Maven which Java source version you want to use -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5</version>

				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- The configuration here tells the WAR plugin to include the HAPIComponent Tester overlay. You can omit it if you are not using that feature. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<archive>
						<manifestEntries>
							<Build-Time>${maven.build.timestamp}</Build-Time>
						</manifestEntries>
					</archive>
					<overlays>
						<overlay>
							<groupId>ca.uhn.hapi.fhir</groupId>
							<artifactId>hapi-fhir-testpage-overlay</artifactId>
						</overlay>
					</overlays>
					<webXml>../ccri-fhirgatewayhttps/src/main/webapp/WEB-INF/web.xml</webXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20.1</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			

			<!-- This is to run the integration tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<url>http://127.0.0.1:8080/manager/text</url>
					<server>TomcatServer</server>
                    <path>/careconnect-gateway-secure</path>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<distributionManagement>
		<repository>
			<id>bintray-kevinmayfield-careconnect</id>
			<name>kevinmayfield-careconnect</name>
			<url>https://api.bintray.com/maven/kevinmayfield/careconnect/ccri-fhirserver/;publish=1</url>
		</repository>
	</distributionManagement>

</project>
